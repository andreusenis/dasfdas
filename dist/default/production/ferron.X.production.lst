

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 22 16:52:27 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F2685
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F2685 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _PORTA	set	3968
    51   000000                     _TRISAbits	set	3986
    52   000000                     _TRISCbits	set	3988
    53   000000                     _OSCCON	set	4051
    54   000000                     _PIR1bits	set	3998
    55   000000                     _RCSTAbits	set	4011
    56   000000                     _TXSTAbits	set	4012
    57   000000                     _RCREG	set	4014
    58   000000                     _SPBRG	set	4015
    59   000000                     _BAUDCONbits	set	4024
    60   000000                     _LATAbits	set	3977
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65   017EFA                     __pcinit:
    66                           	callstack 0
    67   017EFA                     start_initialization:
    68                           	callstack 0
    69   017EFA                     __initialization:
    70                           	callstack 0
    71   017EFA                     end_of_initialization:
    72                           	callstack 0
    73   017EFA                     __end_of__initialization:
    74                           	callstack 0
    75   017EFA  0100               	movlb	0
    76   017EFC  EF96  F0BF         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79   000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81   000001                     ??_main:
    82                           
    83                           ; 1 bytes @ 0x0
    84   000001                     	ds	2
    85   000003                     main@num:
    86                           	callstack 0
    87                           
    88                           ; 2 bytes @ 0x2
    89   000003                     	ds	2
    90   000005                     main@a:
    91                           	callstack 0
    92                           
    93                           ; 1 bytes @ 0x4
    94   000005                     	ds	1
    95   000006                     main@c:
    96                           	callstack 0
    97                           
    98                           ; 1 bytes @ 0x5
    99   000006                     	ds	1
   100   000007                     main@b:
   101                           	callstack 0
   102                           
   103                           ; 1 bytes @ 0x6
   104   000007                     	ds	1
   105                           
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 26 in file "newmain.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;  num             2    2[COMRAM] int 
   116 ;;  b               1    6[COMRAM] unsigned char 
   117 ;;  c               1    5[COMRAM] unsigned char 
   118 ;;  a               1    4[COMRAM] unsigned char 
   119 ;; Return value:  Size  Location     Type
   120 ;;                  1    wreg      void 
   121 ;; Registers used:
   122 ;;		wreg, status,2, status,0, cstack
   123 ;; Tracked objects:
   124 ;;		On entry : 0/0
   125 ;;		On exit  : 0/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   129 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   131 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   132 ;;Total ram usage:        7 bytes
   133 ;; Hardware stack levels required when called: 1
   134 ;; This function calls:
   135 ;;		_UART_Read
   136 ;;		_UART_init
   137 ;; This function is called by:
   138 ;;		Startup code after reset
   139 ;; This function uses a non-reentrant model
   140 ;;
   141                           
   142                           	psect	text0
   143   017F2C                     __ptext0:
   144                           	callstack 0
   145   017F2C                     _main:
   146                           	callstack 30
   147   017F2C                     
   148                           ;newmain.c: 27:     TRISAbits.RA0=0;
   149   017F2C  9092               	bcf	146,0,c	;volatile
   150   017F2E                     
   151                           ;newmain.c: 28:     PORTA=0x00;
   152   017F2E  0E00               	movlw	0
   153   017F30  6E80               	movwf	128,c	;volatile
   154   017F32                     
   155                           ;newmain.c: 29:     LATAbits.LATA0=0;
   156   017F32  9089               	bcf	137,0,c	;volatile
   157   017F34                     
   158                           ;newmain.c: 30:     UART_init();
   159   017F34  EC89  F0BF         	call	_UART_init	;wreg free
   160   017F38                     l757:
   161                           
   162                           ;newmain.c: 32:     {;newmain.c: 33:        char a = UART_Read();
   163   017F38  EC80  F0BF         	call	_UART_Read	;wreg free
   164   017F3C  6E05               	movwf	main@a^0,c
   165   017F3E                     l39:
   166   017F3E  A2AC               	btfss	172,1,c	;volatile
   167   017F40  EFA4  F0BF         	goto	u21
   168   017F44  EFA6  F0BF         	goto	u20
   169   017F48                     u21:
   170   017F48  EF9F  F0BF         	goto	l39
   171   017F4C                     u20:
   172   017F4C                     
   173                           ;newmain.c: 35:        char b = UART_Read();
   174   017F4C  EC80  F0BF         	call	_UART_Read	;wreg free
   175   017F50  6E07               	movwf	main@b^0,c
   176   017F52                     l42:
   177   017F52  A2AC               	btfss	172,1,c	;volatile
   178   017F54  EFAE  F0BF         	goto	u31
   179   017F58  EFB0  F0BF         	goto	u30
   180   017F5C                     u31:
   181   017F5C  EFA9  F0BF         	goto	l42
   182   017F60                     u30:
   183   017F60                     
   184                           ;newmain.c: 37:        char c = UART_Read();
   185   017F60  EC80  F0BF         	call	_UART_Read	;wreg free
   186   017F64  6E06               	movwf	main@c^0,c
   187   017F66                     
   188                           ;newmain.c: 38:        int num = b - '0';
   189   017F66  0ED0               	movlw	208
   190   017F68  2407               	addwf	main@b^0,w,c
   191   017F6A  6E03               	movwf	main@num^0,c
   192   017F6C  6A04               	clrf	(main@num+1)^0,c
   193   017F6E  0EFF               	movlw	255
   194   017F70  2204               	addwfc	(main@num+1)^0,f,c
   195   017F72                     
   196                           ;newmain.c: 39:        if(num >= 2)
   197   017F72  BE04               	btfsc	(main@num+1)^0,7,c
   198   017F74  EFC5  F0BF         	goto	u41
   199   017F78  5004               	movf	(main@num+1)^0,w,c
   200   017F7A  E109               	bnz	u40
   201   017F7C  0E02               	movlw	2
   202   017F7E  5C03               	subwf	main@num^0,w,c
   203   017F80  A0D8               	btfss	status,0,c
   204   017F82  EFC5  F0BF         	goto	u41
   205   017F86  EFC7  F0BF         	goto	u40
   206   017F8A                     u41:
   207   017F8A  EFD4  F0BF         	goto	l773
   208   017F8E                     u40:
   209   017F8E                     
   210                           ;newmain.c: 40:        {;newmain.c: 41:            LATAbits.LATA0=1;
   211   017F8E  8089               	bsf	137,0,c	;volatile
   212   017F90                     
   213                           ;newmain.c: 42:            _delay((unsigned long)((500)*(8000000/4000.0)));
   214   017F90  0E06               	movlw	6
   215   017F92  6E02               	movwf	(??_main+1)^0,c
   216   017F94  0E13               	movlw	19
   217   017F96  6E01               	movwf	??_main^0,c
   218   017F98  0EAE               	movlw	174
   219   017F9A                     u87:
   220   017F9A  2EE8               	decfsz	wreg,f,c
   221   017F9C  D7FE               	bra	u87
   222   017F9E  2E01               	decfsz	??_main^0,f,c
   223   017FA0  D7FC               	bra	u87
   224   017FA2  2E02               	decfsz	(??_main+1)^0,f,c
   225   017FA4  D7FA               	bra	u87
   226   017FA6                     
   227                           ;newmain.c: 43:            LATAbits.LATA0=0;
   228   017FA6  9089               	bcf	137,0,c	;volatile
   229   017FA8                     l773:
   230                           
   231                           ;newmain.c: 45:         if(a=='1' && b =='0' && c =='0')
   232   017FA8  0E31               	movlw	49
   233   017FAA  1805               	xorwf	main@a^0,w,c
   234   017FAC  A4D8               	btfss	status,2,c
   235   017FAE  EFDB  F0BF         	goto	u51
   236   017FB2  EFDD  F0BF         	goto	u50
   237   017FB6                     u51:
   238   017FB6  EF9C  F0BF         	goto	l757
   239   017FBA                     u50:
   240   017FBA  0E30               	movlw	48
   241   017FBC  1807               	xorwf	main@b^0,w,c
   242   017FBE  A4D8               	btfss	status,2,c
   243   017FC0  EFE4  F0BF         	goto	u61
   244   017FC4  EFE6  F0BF         	goto	u60
   245   017FC8                     u61:
   246   017FC8  EF9C  F0BF         	goto	l757
   247   017FCC                     u60:
   248   017FCC  0E30               	movlw	48
   249   017FCE  1806               	xorwf	main@c^0,w,c
   250   017FD0  A4D8               	btfss	status,2,c
   251   017FD2  EFED  F0BF         	goto	u71
   252   017FD6  EFEF  F0BF         	goto	u70
   253   017FDA                     u71:
   254   017FDA  EF9C  F0BF         	goto	l757
   255   017FDE                     u70:
   256   017FDE                     
   257                           ;newmain.c: 46:        {;newmain.c: 47:             LATAbits.LATA0=1;
   258   017FDE  8089               	bsf	137,0,c	;volatile
   259   017FE0                     
   260                           ;newmain.c: 48:            _delay((unsigned long)((500)*(8000000/4000.0)));
   261   017FE0  0E06               	movlw	6
   262   017FE2  6E02               	movwf	(??_main+1)^0,c
   263   017FE4  0E13               	movlw	19
   264   017FE6  6E01               	movwf	??_main^0,c
   265   017FE8  0EAE               	movlw	174
   266   017FEA                     u97:
   267   017FEA  2EE8               	decfsz	wreg,f,c
   268   017FEC  D7FE               	bra	u97
   269   017FEE  2E01               	decfsz	??_main^0,f,c
   270   017FF0  D7FC               	bra	u97
   271   017FF2  2E02               	decfsz	(??_main+1)^0,f,c
   272   017FF4  D7FA               	bra	u97
   273   017FF6                     
   274                           ;newmain.c: 49:            LATAbits.LATA0=0;
   275   017FF6  9089               	bcf	137,0,c	;volatile
   276   017FF8  EF9C  F0BF         	goto	l757
   277   017FFC  EF00  F000         	goto	start
   278   018000                     __end_of_main:
   279                           	callstack 0
   280                           
   281 ;; *************** function _UART_init *****************
   282 ;; Defined at:
   283 ;;		line 7 in file "newmain.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels used: 1
   303 ;; This function calls:
   304 ;;		Nothing
   305 ;; This function is called by:
   306 ;;		_main
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text1
   311   017F12                     __ptext1:
   312                           	callstack 0
   313   017F12                     _UART_init:
   314                           	callstack 30
   315   017F12                     
   316                           ;newmain.c: 8:     OSCCON= 0b01110100;
   317   017F12  0E74               	movlw	116
   318   017F14  6ED3               	movwf	211,c	;volatile
   319   017F16                     
   320                           ;newmain.c: 9:     TRISCbits.RC7 = 1;
   321   017F16  8E94               	bsf	148,7,c	;volatile
   322   017F18                     
   323                           ;newmain.c: 10:     TRISCbits.RC6 = 0;
   324   017F18  9C94               	bcf	148,6,c	;volatile
   325   017F1A                     
   326                           ;newmain.c: 11:     TXSTAbits.SYNC = 0;
   327   017F1A  98AC               	bcf	172,4,c	;volatile
   328   017F1C                     
   329                           ;newmain.c: 12:     TXSTAbits.BRGH = 1;
   330   017F1C  84AC               	bsf	172,2,c	;volatile
   331   017F1E                     
   332                           ;newmain.c: 13:     TXSTAbits.TXEN = 1;
   333   017F1E  8AAC               	bsf	172,5,c	;volatile
   334   017F20                     
   335                           ;newmain.c: 14:     BAUDCONbits.BRG16 =1;
   336   017F20  86B8               	bsf	184,3,c	;volatile
   337                           
   338                           ;newmain.c: 15:     SPBRG = 207;
   339   017F22  0ECF               	movlw	207
   340   017F24  6EAF               	movwf	175,c	;volatile
   341   017F26                     
   342                           ;newmain.c: 16:     RCSTAbits.SPEN = 1;
   343   017F26  8EAB               	bsf	171,7,c	;volatile
   344   017F28                     
   345                           ;newmain.c: 17:     RCSTAbits.CREN = 1;
   346   017F28  88AB               	bsf	171,4,c	;volatile
   347   017F2A  0012               	return		;funcret
   348   017F2C                     __end_of_UART_init:
   349                           	callstack 0
   350                           
   351 ;; *************** function _UART_Read *****************
   352 ;; Defined at:
   353 ;;		line 20 in file "newmain.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      unsigned char 
   360 ;; Registers used:
   361 ;;		wreg, status,2
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   371 ;;Total ram usage:        0 bytes
   372 ;; Hardware stack levels used: 1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text2
   381   017F00                     __ptext2:
   382                           	callstack 0
   383   017F00                     _UART_Read:
   384                           	callstack 30
   385   017F00                     l30:
   386   017F00  AA9E               	btfss	158,5,c	;volatile
   387   017F02  EF85  F0BF         	goto	u11
   388   017F06  EF87  F0BF         	goto	u10
   389   017F0A                     u11:
   390   017F0A  EF80  F0BF         	goto	l30
   391   017F0E                     u10:
   392   017F0E                     
   393                           ;newmain.c: 24:   return RCREG;
   394   017F0E  50AE               	movf	174,w,c	;volatile
   395   017F10  0012               	return		;funcret
   396   017F12                     __end_of_UART_Read:
   397                           	callstack 0
   398   000000                     
   399                           	psect	rparam
   400   000000                     
   401                           	psect	idloc
   402                           
   403                           ;Config register IDLOC0 @ 0x200000
   404                           ;	unspecified, using default values
   405   200000                     	org	2097152
   406   200000  FF                 	db	255
   407                           
   408                           ;Config register IDLOC1 @ 0x200001
   409                           ;	unspecified, using default values
   410   200001                     	org	2097153
   411   200001  FF                 	db	255
   412                           
   413                           ;Config register IDLOC2 @ 0x200002
   414                           ;	unspecified, using default values
   415   200002                     	org	2097154
   416   200002  FF                 	db	255
   417                           
   418                           ;Config register IDLOC3 @ 0x200003
   419                           ;	unspecified, using default values
   420   200003                     	org	2097155
   421   200003  FF                 	db	255
   422                           
   423                           ;Config register IDLOC4 @ 0x200004
   424                           ;	unspecified, using default values
   425   200004                     	org	2097156
   426   200004  FF                 	db	255
   427                           
   428                           ;Config register IDLOC5 @ 0x200005
   429                           ;	unspecified, using default values
   430   200005                     	org	2097157
   431   200005  FF                 	db	255
   432                           
   433                           ;Config register IDLOC6 @ 0x200006
   434                           ;	unspecified, using default values
   435   200006                     	org	2097158
   436   200006  FF                 	db	255
   437                           
   438                           ;Config register IDLOC7 @ 0x200007
   439                           ;	unspecified, using default values
   440   200007                     	org	2097159
   441   200007  FF                 	db	255
   442                           
   443                           	psect	config
   444                           
   445                           ; Padding undefined space
   446   300000                     	org	3145728
   447   300000  FF                 	db	255
   448                           
   449                           ;Config register CONFIG1H @ 0x300001
   450                           ;	Oscillator Selection bits
   451                           ;	OSC = IRCIO67, Internal oscillator block, port function on RA6 and RA7
   452                           ;	Fail-Safe Clock Monitor Enable bit
   453                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   454                           ;	Internal/External Oscillator Switchover bit
   455                           ;	IESO = OFF, Oscillator Switchover mode disabled
   456   300001                     	org	3145729
   457   300001  08                 	db	8
   458                           
   459                           ;Config register CONFIG2L @ 0x300002
   460                           ;	Power-up Timer Enable bit
   461                           ;	PWRT = OFF, PWRT disabled
   462                           ;	Brown-out Reset Enable bits
   463                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   464                           ;	Brown-out Reset Voltage bits
   465                           ;	BORV = 3, VBOR set to 2.1V
   466   300002                     	org	3145730
   467   300002  19                 	db	25
   468                           
   469                           ;Config register CONFIG2H @ 0x300003
   470                           ;	Watchdog Timer Enable bit
   471                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   472                           ;	Watchdog Timer Postscale Select bits
   473                           ;	WDTPS = 32768, 1:32768
   474   300003                     	org	3145731
   475   300003  1E                 	db	30
   476                           
   477                           ; Padding undefined space
   478   300004                     	org	3145732
   479   300004  FF                 	db	255
   480                           
   481                           ;Config register CONFIG3H @ 0x300005
   482                           ;	PORTB A/D Enable bit
   483                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   484                           ;	Low-Power Timer 1 Oscillator Enable bit
   485                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   486                           ;	MCLR Pin Enable bit
   487                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   488   300005                     	org	3145733
   489   300005  00                 	db	0
   490                           
   491                           ;Config register CONFIG4L @ 0x300006
   492                           ;	Stack Full/Underflow Reset Enable bit
   493                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   494                           ;	Single-Supply ICSP Enable bit
   495                           ;	LVP = ON, Single-Supply ICSP enabled
   496                           ;	Boot Block Size Select bits
   497                           ;	BBSIZ = 1024, 1K words (2K bytes) Boot Block
   498                           ;	Extended Instruction Set Enable bit
   499                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   500                           ;	Background Debugger Enable bit
   501                           ;	DEBUG = 0x1, unprogrammed default
   502   300006                     	org	3145734
   503   300006  84                 	db	132
   504                           
   505                           ; Padding undefined space
   506   300007                     	org	3145735
   507   300007  FF                 	db	255
   508                           
   509                           ;Config register CONFIG5L @ 0x300008
   510                           ;	Code Protection bit
   511                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   512                           ;	Code Protection bit
   513                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   514                           ;	Code Protection bit
   515                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   516                           ;	Code Protection bit
   517                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   518                           ;	Code Protection bit
   519                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
   520                           ;	Code Protection bit
   521                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
   522   300008                     	org	3145736
   523   300008  3F                 	db	63
   524                           
   525                           ;Config register CONFIG5H @ 0x300009
   526                           ;	Boot Block Code Protection bit
   527                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   528                           ;	Data EEPROM Code Protection bit
   529                           ;	CPD = OFF, Data EEPROM not code-protected
   530   300009                     	org	3145737
   531   300009  C0                 	db	192
   532                           
   533                           ;Config register CONFIG6L @ 0x30000A
   534                           ;	Write Protection bit
   535                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   536                           ;	Write Protection bit
   537                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   538                           ;	Write Protection bit
   539                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   540                           ;	Write Protection bit
   541                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   542                           ;	Write Protection bit
   543                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
   544                           ;	Write Protection bit
   545                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
   546   30000A                     	org	3145738
   547   30000A  3F                 	db	63
   548                           
   549                           ;Config register CONFIG6H @ 0x30000B
   550                           ;	Configuration Register Write Protection bit
   551                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   552                           ;	Boot Block Write Protection bit
   553                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   554                           ;	Data EEPROM Write Protection bit
   555                           ;	WRTD = OFF, Data EEPROM not write-protected
   556   30000B                     	org	3145739
   557   30000B  E0                 	db	224
   558                           
   559                           ;Config register CONFIG7L @ 0x30000C
   560                           ;	Table Read Protection bit
   561                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   562                           ;	Table Read Protection bit
   563                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   564                           ;	Table Read Protection bit
   565                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   566                           ;	Table Read Protection bit
   567                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   568                           ;	Table Read Protection bit
   569                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
   570                           ;	Table Read Protection bit
   571                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
   572   30000C                     	org	3145740
   573   30000C  3F                 	db	63
   574                           
   575                           ;Config register CONFIG7H @ 0x30000D
   576                           ;	Boot Block Table Read Protection bit
   577                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   578   30000D                     	org	3145741
   579   30000D  40                 	db	64
   580                           tosu	equ	0xFFF
   581                           tosh	equ	0xFFE
   582                           tosl	equ	0xFFD
   583                           stkptr	equ	0xFFC
   584                           pclatu	equ	0xFFB
   585                           pclath	equ	0xFFA
   586                           pcl	equ	0xFF9
   587                           tblptru	equ	0xFF8
   588                           tblptrh	equ	0xFF7
   589                           tblptrl	equ	0xFF6
   590                           tablat	equ	0xFF5
   591                           prodh	equ	0xFF4
   592                           prodl	equ	0xFF3
   593                           indf0	equ	0xFEF
   594                           postinc0	equ	0xFEE
   595                           postdec0	equ	0xFED
   596                           preinc0	equ	0xFEC
   597                           plusw0	equ	0xFEB
   598                           fsr0h	equ	0xFEA
   599                           fsr0l	equ	0xFE9
   600                           wreg	equ	0xFE8
   601                           indf1	equ	0xFE7
   602                           postinc1	equ	0xFE6
   603                           postdec1	equ	0xFE5
   604                           preinc1	equ	0xFE4
   605                           plusw1	equ	0xFE3
   606                           fsr1h	equ	0xFE2
   607                           fsr1l	equ	0xFE1
   608                           bsr	equ	0xFE0
   609                           indf2	equ	0xFDF
   610                           postinc2	equ	0xFDE
   611                           postdec2	equ	0xFDD
   612                           preinc2	equ	0xFDC
   613                           plusw2	equ	0xFDB
   614                           fsr2h	equ	0xFDA
   615                           fsr2l	equ	0xFD9
   616                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0      75
                                              0 COMRAM     7     7      0
                          _UART_Read
                          _UART_init
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Read
   _UART_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBIGSFRh          2C      0       0      30        0.0%
BITBIGSFRlhhh       1A      0       0      31        0.0%
BITBIGSFRlhhlh       8      0       0      32        0.0%
BITBIGSFRlhhll       1      0       0      33        0.0%
BITBIGSFRlhlh        C      0       0      34        0.0%
BITBIGSFRlhll        9      0       0      35        0.0%
BITBIGSFRllh         1      0       0      36        0.0%
BITBIGSFRlllhh       8      0       0      37        0.0%
BITBIGSFRlllhl       8      0       0      38        0.0%
BITBIGSFRllll      280      0       0      39        0.0%
ABS                  0      0       0      40        0.0%
BIGRAM             CFF      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 22 16:52:27 2022

                     l30 7F00                       l33 7F10                       l42 7F52  
                     l27 7F2A                       l39 7F3E                       u10 7F0E  
                     u11 7F0A                       u20 7F4C                       u21 7F48  
                     u30 7F60                       u31 7F5C                       u40 7F8E  
                     u41 7F8A                       u50 7FBA                       u51 7FB6  
                     u60 7FCC                       u61 7FC8                       u70 7FDE  
                     u71 7FDA                       u87 7F9A                       u97 7FEA  
                    l731 7F1A                      l741 7F28                      l733 7F1C  
                    l725 7F12                      l743 7F00                      l735 7F1E  
                    l727 7F16                      l751 7F2E                      l745 7F0E  
                    l737 7F20                      l729 7F18                      l761 7F60  
                    l753 7F32                      l739 7F26                      l771 7FA6  
                    l763 7F66                      l755 7F34                      l781 7FE0  
                    l773 7FA8                      l765 7F72                      l757 7F38  
                    l749 7F2C                      l783 7FF6                      l775 7FBA  
                    l767 7F8E                      l759 7F4C                      l777 7FCC  
                    l769 7F90                      l779 7FDE                      wreg 000FE8  
                   _main 7F2C                     start 0000             ___param_bank 000000  
                  ?_main 0001                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _PORTA 000F80                    main@a 0005                    main@b 0007  
                  main@c 0006                    status 000FD8          __initialization 7EFA  
           __end_of_main 8000                   ??_main 0001            __activetblptr 000000  
                 _OSCCON 000FD3        __end_of_UART_Read 7F12        __end_of_UART_init 7F2C  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 7EFA  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7EFA                  __ramtop 1000  
                __ptext0 7F2C                  __ptext1 7F12                  __ptext2 7F00  
                main@num 0003     end_of_initialization 7EFA                _RCSTAbits 000FAB  
              _UART_Read 7F00                _UART_init 7F12                _TRISAbits 000F92  
              _TRISCbits 000F94                _TXSTAbits 000FAC              _BAUDCONbits 000FB8  
             ?_UART_Read 0001               ?_UART_init 0001      start_initialization 7EFA  
            ??_UART_Read 0001              ??_UART_init 0001                 _LATAbits 000F89  
               _PIR1bits 000F9E                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000  
